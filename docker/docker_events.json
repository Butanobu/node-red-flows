[{"id":"9eb936dd.7658d","type":"comment","name":"Read Docker event stream","info":"","x":114.5,"y":501,"z":"c0be1bea.341748","wires":[]},{"id":"4863e6ec.e18bb8","type":"function","name":"","func":"// msg.payload should be either 'start' or 'stop'\n// The request is made to Docker, but because it's a stream it never ends,\n// so the 'stop' code tears down the connection from the client side.\n\nswitch (msg.payload) {\n    case 'start':\n        node.warn(\"Connecting to Docker event stream...\");\n        var options = {\n            host: \"172.17.42.1\",\n            port: \"2375\",\n            path: \"/events\",\n            method: \"GET\",\n            headers: {\n                Accept: \"*/*\"\n            }\n        };\n        \n        context.req = context.global.http.request(options, function(response) {\n//every time an event comes from Docker we get a 'data' event in the form of a buffer, which .toString() converts to a JSON object nicely.\n            response.on(\"data\", function(data) {\n                node.send({payload: data.toString()});\n            });\n            response.on(\"end\", function(data) {\n                node.warn(\"HTTP stream closed correctly\");\n            });\n        });\n        context.req.on(\"error\", function(error){\n            node.warn(\"Something broke: \" + error);\n        });\n        context.req.end();\n        break;\n    case 'stop':\n// Check to see if the request exists, abort it and delete it\n        if (typeof context.req !== 'undefined'){\n            context.req.abort();\n            delete context.req;\n            node.warn(\"Manually closed http stream\");\n        }\n        else {\n            node.warn(\"Tried to stop undefined http stream\");\n        }\n        break;\n    default:\n        node.warn(\"Something else happened other than a start or stop\");\n}","outputs":1,"valid":true,"x":666,"y":537,"z":"c0be1bea.341748","wires":[["c0f6a669.ff1c68"]]},{"id":"c0f6a669.ff1c68","type":"debug","name":"","active":true,"console":"false","complete":"payload","x":812,"y":537,"z":"c0be1bea.341748","wires":[]},{"id":"ce079b8d.259d7","type":"inject","name":"","topic":"","payload":"start","payloadType":"string","repeat":"","crontab":"","once":false,"x":314,"y":501,"z":"c0be1bea.341748","wires":[["2fa2a7b5.3a6b2"]]},{"id":"f32d69b5.1bb45","type":"inject","name":"","topic":"","payload":"stop","payloadType":"string","repeat":"","crontab":"","once":false,"x":314,"y":537,"z":"c0be1bea.341748","wires":[["4863e6ec.e18bb8"]]},{"id":"2fa2a7b5.3a6b2","type":"rbe","name":"Prevent multiple starts","func":"rbe","gap":"","x":489,"y":501,"z":"c0be1bea.341748","wires":[["4863e6ec.e18bb8"]]}]